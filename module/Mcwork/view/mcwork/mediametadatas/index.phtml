<?php
use ContentinumComponents\Tools\HandleSerializeDatabase;
/**
 * contentinum - accessibility websites
*
* LICENSE
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
		* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
		* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
* OF THE POSSIBILITY OF SUCH DAMAGE.
*
* @category contentinum backend
* @package View
* @author Michael Jochum, michael.jochum@jochum-mediaservices.de
* @copyright Copyright (c) 2009-2013 jochum-mediaservices, Katja Jochum (http://www.jochum-mediaservices.de)
* @license http://www.opensource.org/licenses/bsd-license
* @since contentinum version 5.0
* @link      https://github.com/Mikel1961/contentinum-components
* @version   1.0.0
*/

$alternate = function ($mediaAlternate, $field = 'thumbnail', $ln = 'mediaLink')
{
    $src = false;
    
    if (isset($mediaAlternate[$field][$ln])) {
        $src = $mediaAlternate[$field][$ln];
    }
    
    return $src;
};

$metas = function ($mediaMetas, $key)
{
    $value = '';
    if (isset($mediaMetas[$key])) {
        $value = $mediaMetas[$key];
    }
    return $value;
};

$getAssignTags = function ($mediaId, $assigntags)
{
    $tags = '';
    $i = 1;
	if (isset($assigntags[$mediaId])){
		foreach ($assigntags[$mediaId] as $value){
		    if ($i > 1){
		        $tags .= ', ';
		    }
		    $tags .= $value;
		    $i++;
		}
	}
	return $tags;
}


?>
<div class="box">
	<div class="box-title">
		<h3>
			<i class="fa fa-file-image-o"></i> <?php // echo $this->translate($this->mcworkContent( $this->page, $this->pagecontent,'subheadline')); 
			?> 
		</h3>
	</div>
	<div class="box-content">
		 <?php echo $this->translate($this->mcworkContent( $this->page, $this->pagecontent,'content')); ?>
	</div>
</div>
<div id="main">
<ul id="tiles">
<?php
$mcUnserialize = new HandleSerializeDatabase();
foreach ($this->entries as $entry){
    $mediaAlternate = $mcUnserialize->execUnserialize($entry->mediaAlternate);   
    $mediaMetas = $mcUnserialize->execUnserialize($entry->mediaMetas);
    $data = ' data-ident="' . $entry->id . '"';
    $data .= ' data-name="' . $entry->mediaName . '"';
    $data .= ' data-src="'. $alternate($mediaAlternate,'mobile') . '"';
    $data .= ' data-alt="'. $metas($mediaMetas, 'alt') . '"';
    $data .= ' data-title="'. $metas($mediaMetas, 'title') . '"';
    $data .= ' data-caption="'. $metas($mediaMetas, 'caption') . '"';
    $data .= ' data-headline="'. $metas($mediaMetas, 'headline') . '"';
    $data .= ' data-description="'. $metas($mediaMetas, 'description') . '"';
    $data .= ' data-linkname="'. $metas($mediaMetas, 'linkname') . '"';
    $data .= ' data-mediatype="'. $entry->mediaType . '"';
    $data .= ' data-mediatags="'. $getAssignTags($entry->id, $this->assigntags) . '"';
    
    echo '<li><a class="loadedititem" href="#"'.$data.'>';
    if ( preg_match('/image\//', $entry->mediaType)  ){
        echo '<img src="' . $alternate($mediaAlternate,'mobile') . '" />';
    } else {
        switch ($entry->mediaType){
            case 'application/pdf' :
                echo '<p><i class="fa fa-file-pdf-o fa-5x pdf-color"></i></p>';
            break;
            default:
                echo '<p><i class="fa fa-file fa-5x"></i></p>';
            break;
                    
        }
    }
    echo '<p>' . $entry->mediaName . '</p></a></li>';
}
?>
</ul>
</div>